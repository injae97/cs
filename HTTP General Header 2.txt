## 💡 캐시 기본 동작
	a. 캐시가 없을 때
		- 데이터가 변경되지 않아도 계속 네트워크를 통해서 데이터를 다운로드 받아야 한다.
		- 인터넷 네트워크는 매우 느리고 비싸다.
		- 브라우저 로딩 속도가 느리다.
		- 느린 사용자 경험 
		
		e.g 캐시가 없을 때(첫 번째 요청)
		1. 웹 브라우저(요청 1) -> 서버
		
		웹 브라우저
		GET/ star.jpg
		
		서버
		HTTP/1.1 200 OK
		Content-Type: image/jpeg
		Content-Length: 34012
		
		lkj123kljoasdnjsadkasjldnjn123498iasdnjklasdnjksadnasjkdn12i3u4uiasdnjk123ejiodoji12ojiue3njmkl
		
		2. 서버(응답) -> 웹 브라우저 
		
		서버
		star.jpg
		
		1.1M 가정
		HTTP 헤더: 0.1M
		HTTP 바디: 1.0M
		
		서버가 클라이언트에게 1.1 M 전송 1 
		
		e.g 캐시가 없을 때(두 번째 요청)
		1. 웹 브라우저(요청 2) -> 서버
		
		웹 브라우저
		GET/ star.jpg
		
		서버
		HTTP/1.1 200 OK
		Content-Type: image/jpeg
		Content-Length: 34012
		
		lkj123kljoasdnjsadkasjldnjn123498iasdnjklasdnjksadnasjkdn12i3u4uiasdnjk123ejiodoji12ojiue3njmkl
		
		2. 서버(응답) -> 웹 브라우저 
		
		서버
		star.jpg
		
		1.1M 가정
		HTTP 헤더: 0.1M
		HTTP 바디: 1.0M
		
		서버가 클라이언트에게 1.1 M 전송 2 
	
	b. 캐시 적용
		- 캐시 덕분에 캐시 가능 시간동안 네트워크를 사용하지 않아도 된다.
		- 비싼 네트워크 사용량을 줄일 수 있다.
		- 브라우저 로딩 속도가 매우 빠르다.
		- 빠른 사용자 경험
		
		e.g 캐시 적용(첫 번째 요청)
		1. 웹 브라우저(요청 1) -> 서버
		
		웹 브라우저
		GET/ star.jpg
		
		서버
		HTTP/1.1 200 OK
		Content-Type: image/jpeg
		cache-control: max-age=60(캐시가 유효한 시간(초))
		Content-Length: 34012
		
		lkj123kljoasdnjsadkasjldnjn123498iasdnjklasdnjksadnasjkdn12i3u4uiasdnjk123ejiodoji12ojiue3njmkl
		
		* 브라우저 캐시: 응답 결과를 캐시에 저장(60초 유효)		
		
		e.g 캐시 적용(두 번째 요청) - 캐시 시간 유효 
		1. 웹 브라우저(요청 2) -> 브라우저 캐시(캐시 유효 시간 검증(60초 유효))
		  
		웹 브라우저
		GET/ star.jpg
		
		* 캐시가 유효 하다면 캐시에서 조회 
					
	c. 캐시 시간 초과
		- 캐시 유효 시간이 초과하면, 서버를 통해 데이터를 다시 조회하고, 캐시를 갱신한다.
		- 이때 다시 네트워크 다운로드가 발생한다.
		
		e.g 캐시 적용(세 번째 요청) - 캐시 시간 초과
		1. 웹 브라우저(요청 3) -> 브라우저 캐시(캐시 유효 시간 검증(60초 초과))
		
		웹 브라우저
		GET/ star.jpg
		
		* 웹 브라우저 -> 브라우저 캐시(캐시 60초 초과 -> 다시 요청)
		
		웹 브라우저
		GET/ star.jpg
		
		서버
		HTTP/1.1 200 OK
		Content-Type: image/jpeg
		cache-control: max-age=60(캐시가 유효한 시간(초))
		Content-Length: 34012
		
		lkj123kljoasdnjsadkasjldnjn123498iasdnjklasdnjksadnasjkdn12i3u4uiasdnjk123ejiodoji12ojiue3njmkl
		
		1.1M 가정
		HTTP 헤더: 0.1M
		HTTP 바디: 1.0M
		
		서버가 클라이언트에게 1.1 M 전송 3
		
		* 브라우저 캐시: 응답 결과를 다시 캐시에 저장 
		* 캐시 시간은 지났지만 이미지가 같은 파일 이라면 다시 받아야 할까? 
		
## 💡 검증 헤더와 조건부 요청1