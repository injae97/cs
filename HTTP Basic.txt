## 💡 HTTP (HyperText Transfer Protocol)
    - HTTP 메세지에 모든 것을 전송
	    a. HTML, TEXT
		b. IMAGE, 음성, 영상, 파일
		c. JSON, XML (API)
		d. 거의 모든 형태의 데이터 전송 가능
		e. 서버간에 데이터를 주고 받을 때도 대부분 HTTP 사용
			
	- HTTP 역사
	    a. HTTP/0.9 1991년 : GET 메서드만 지원, HTTP 헤더 X
		b. HTTP/1.0 1996년 : 메서드, 헤더 추가 
		c. HTTP/1.1 1997년 : 가장 많이 사용, 우리에게 갖아 중요한 버전 <<<
		    - RFC2068(1997) > RFC2616(1999) > RFC7230~7235(2014)
		d. HTTP/2 2015년 : 성능 개선
		e. HTTP/3 진행중 : TCP 대신에 UDP 사용, 성능 개선
	
	- 기반 프로토콜
	    a. TCP : HTTP/1.1, HTTP/2
		b. UDP : HTTP/3
		c. 현재 HTTP/1.1 주로 사용
		    - HTTP/2, HTTP/3 도 점점 증가 
		
	    * Chrome > F12 > Newwork > Tab에서 오른쪽 마우스 > Protocol
		
	- HTTP 특징
	    a. 클라이언트 서버 구조
		    1. 클라이언트는 서버에 요청을 보내고, 응답을 대기
			2. 서버가 요청에 대한 결과를 만들어서 응답 
			
			* Request(요청), Response(응답) 구조
			* 화면은 클라이언트에 저장, 비지니스 로직, 데이터들은 서버에 저장
		b. 무상태 프로토콜(스테이스리스), 비연결성
		c. HTTP 메세지
		d. 단순함, 확장 가능 
	
	- 상태유지(Stateful) & 무상태(Stateless) 차이
	    a. 상태유지(Stateful)
			- 항상 같은 서버가 유지되어야 한다.
	    	- 중간에 다른 점원(서버)으로 바뀌면 안된다. (중간에 다른 점원(서버)으로 바뀔 때 상태 정보를 다른 점원(서버)에게 미리 알려줘야 한다)

			e.g 상태유지(Stateful) 
				- 고객 : 노트북 얼마인가요?
				- 점원 : 100만원 (노트북 상태 유지)
				
				- 고객 : 2개 구매 할게요.
				- 점원 : 200만원 입니다. 신용카드, 현금중에 어떤걸로 구매하시겠어요? (노트북, 2개 상태 유지)
				
				- 고객 : 신용카드로 구매하겠습니다.
				- 점원 : 200만원 결제 완료되었습니다. (노트북, 2개, 신용카드 상태 유지)
						
			e.g 상태유지(Stateful) - 점원이 중간에 바뀔 경우 
				- 서버가 클라이언트의 이전 상태를 보존 O
				- 고객 : 노트북 얼마인가요?
				- 점원A(서버1) : 100만원 
				
				- 고객 : 2개 구매 할게요.
				- 점원B(서버2) : 무엇을 2개 구매하시겠어요? 
				
				- 고객 : 신용카드로 구매하겠습니다.
				- 점원C(서버3) : 무슨 제품을 몇개 신용카드로 구매하시겠어요? 
			
		b. 무상태(Stateless)
			a. 서버가 클라이언트의 상태를 보존 X
			b. 장점 : 서버 확장성 높음(스케일 아웃 : 수평 확장 유리), 아무 서버나 호출해도 된다.
			c. 단점 : 클라이언트가 추가 데이터 전송
				
			e.g 무상태(Stateless) 
				- 고객 : 노트북 얼마인가요?
				- 점원 : 100만원  
				
				- 고객 : 노트북 2개 구매 할게요.
				- 점원 : 노트북 2개는 200만원 입니다. 신용카드, 현금중에 어떤걸로 구매하시겠어요?  
				
				- 고객 : 노트북 2개를 신용카드로 구매하겠습니다.
				- 점원 : 200만원 결제 완료되었습니다. 
				
			e.g 무상태(Stateless) - 점원이 중간에 바뀔 경우
				- 고객 : 노트북 얼마인가요?
				- 점원A(서버1) : 100만원  
				
				- 고객 : 노트북 2개 구매 할게요.
				- 점원B(서버2) : 노트북 2개는 200만원 입니다. 신용카드, 현금중에 어떤걸로 구매하시겠어요? 
				
				- 고객 : 노트북 2개를 신용카드로 구매하겠습니다.
				- 점원C(서버3) : 200만원 결제 완료되었습니다. 
				
			- 중간에 다른 점원으로 바뀌어도 된다.
			- 갑자기 고객(클라이언트)이 증가해도 점원을 대거 투입할 수 있다.
			- 갑자기 클라이언트 요청이 증가해도 서버를 대거 투입할 수 있다.
		        * 즉, 무상태는 응답 서버를 쉽게 바꿀 수 있다. > 무한한 서버 증설 가능
				
		
		* 무상태(Stateless) 실무 한계
		    a. 모든 것을 무상태(Stateless)로 설계 할 수 있는 경우도 있고 없는 경우도 있다.
			
			b. 무상태(Stateless)	
			    e.g 로그인이 필요 없는 단순한 서비스 소개 화면
				
			c. 상태유지(Stateful) 
			    e.g 로그인이 필요한 화면
				- 로그인한 사용자의 경우 로그인 했다는 상태를 서버에 유지
					- 일반적으로 브라우저 쿠키와 서버 세션등을 사용해서 상태 유지
					- 상태 유지는 최소한만 사용
					
					
	- 비연결성(connectionless)

